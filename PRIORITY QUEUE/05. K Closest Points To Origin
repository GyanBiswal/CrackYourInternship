class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<pair<double, vector<int>>> maxHeap; // {distance , {x,y}}
        vector<vector<int>>ans;

        for(auto point : points){
            double distance = sqrt(point[0] * point[0] + point[1] * point[1]);
            maxHeap.push({distance , point});

            if(maxHeap.size() > k){
                maxHeap.pop();
            }
        }

        while(!maxHeap.empty()){
            ans.push_back(maxHeap.top().second);
            maxHeap.pop();
        }
        return ans;
    }
};
