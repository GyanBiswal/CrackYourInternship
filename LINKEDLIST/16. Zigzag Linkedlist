class Solution {
public:
    void zigzag(ListNode* head) {
        if (!head || !head->next) return;

        bool less = true; // Start with 'less than' condition
        
        ListNode* curr = head;
        
        while (curr && curr->next) {
            if ((less && curr->val >= curr->next->val) || (!less && curr->val <= curr->next->val)) {
                // Swap values
                swap(curr->val, curr->next->val);
            }
            
            // Move to the next pair
            curr = curr->next;
            
            // Alternate the condition
            less = !less;
        }
    }
    
private:
    void swap(int& a, int& b) {
        int temp = a;
        a = b;
        b = temp;
    }
};
