class Solution {
public:
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        if(intervals.empty()) return 0;
        // Sort intervals by their end times
        sort(intervals.begin(), intervals.end(), [](const vector<int>& a, const vector<int>& b) {
            return a[1] < b[1];
        });

        int count = 0;
        int endTime = intervals[0][1];

        for(int i = 1; i < intervals.size(); i++){
            if (intervals[i][0] < endTime) { // If current interval starts before the last interval ends, there is an overlap
                count++; // Increment count of intervals to remove
            } 
            else {
                endTime = intervals[i][1]; // Update end time to the end of the current interval
            }
        }
        return count;
    }
};
