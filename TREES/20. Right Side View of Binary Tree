/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void rightView(TreeNode* currNode , vector<int>&ans , int currLevel){
        if(currNode == NULL) return;

        if(currLevel == ans.size()) ans.push_back(currNode->val);

        rightView(currNode->right , ans , currLevel + 1);
        rightView(currNode->left , ans , currLevel + 1);
    }
    vector<int> rightSideView(TreeNode* root) {
        vector<int>ans;
        rightView(root , ans , 0);
        return ans;
    }
};
