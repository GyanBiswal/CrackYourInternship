/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findLeft(TreeNode* root , bool isLeft){
        if(root == NULL) return 0;

        // check if current node is a left node
        if(root->left == NULL && root->right == NULL){
            if(isLeft){
                return root->val;
            }
            else{
                return 0;
            }
        }
        return findLeft(root->left , true) + findLeft(root->right , false);
    }
    int sumOfLeftLeaves(TreeNode* root) {
        return findLeft(root , false);
    }
};
