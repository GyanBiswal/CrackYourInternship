class Solution
{
    public:
    int findMissingPositive(int arr[], int size) 
    {
        // Mark elements present in the array
        for (int i = 0; i < size; i++) {
            int x = abs(arr[i]);
            if (x - 1 < size && arr[x - 1] > 0) {
                arr[x - 1] = -arr[x - 1];
            }
        }

        // Identify the first missing positive number
        for (int i = 0; i < size; i++) {
            if (arr[i] > 0) {
                return i + 1;
            }
        }
        
        return size + 1;
    }
    //Function to find the smallest positive number missing from the array.
    int missingNumber(int arr[], int n) 
    { 
        // Step 1: Segregate positive and non-positive numbers
        int j = 0;
        for (int i = 0; i < n; i++) {
            if (arr[i] <= 0) {
                swap(arr[i], arr[j]);
                j++;
            }
        }
        
        // Now j is the index of the first positive number
        // Step 2: Find the missing positive number in the positive part
        return findMissingPositive(arr + j, n - j);
    } 
    

};
