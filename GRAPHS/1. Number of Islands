class Solution {
public:
    void dfs(vector<vector<char>>& grid , int i , int j){
        int row = grid.size();
        int col = grid[0].size();

        while(i >= 0 && i < row && j >= 0 && j < col && grid[i][j] == '1'){
            grid[i][j] = '*';
            dfs(grid , i + 1 , j);
            dfs(grid , i - 1 , j);
            dfs(grid , i , j + 1);
            dfs(grid , i , j - 1);
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        int row = grid.size();
        int col = grid[0].size();
        int count = 0;

        for(int i = 0; i < row; i++){
            for(int j = 0; j < col; j++){
                if(grid[i][j] == '1'){
                    dfs(grid , i , j);
                    count++;
                }
            }
        }
        return count;
    }
};

