class Solution {
  public:
    // Function to detect cycle in a directed graph.
    bool cycle(int V, vector<int> adj[] , int start , vector<bool>&vis , vector<bool>&helper){
        vis[start] = true;
        helper[start] = true;
        for(int i : adj[start]){
            if(!vis[i]){
                if(cycle(V , adj , i , vis , helper)){
                    return 1;
                }
            }
            else if(helper[i]){
                return 1;
            }
        }
        helper[start] = false;
        return false;
    }
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        vector<bool>vis(V,false);
        vector<bool>helper(V,false);
        for(int i = 0; i < V; i++){
            if(!vis[i]){
                if(cycle(V , adj , i , vis , helper)){
                    return 1;
                }
            }
        }
        return 0;
    }
};
