class Solution {
public:
    int largestRectangleArea(vector < int > & heights) {
        int n = heights.size();
        vector<int>leftSmall(n);
        vector<int>rightSmall(n);
        stack<int>s;
        
        for(int i = 0; i < n; i++){
            while(!s.empty() && heights[s.top()] >= heights[i]){
                s.pop();
            }
            if(s.empty()){
                leftSmall[i] = 0;
            }
            else{
                leftSmall[i] = s.top() + 1;
            }
            s.push(i);
        }
        while(!s.empty()){
            s.pop();
        }

        for(int i = n - 1; i >= 0; i--){
            while(!s.empty() && heights[s.top()] >= heights[i]){
                s.pop();
            }
            if(s.empty()){
                rightSmall[i] = n - 1;
            }
            else{
                rightSmall[i] = s.top() - 1;
            }
            s.push(i);
        }
        int maxi = 0;
        for(int i = 0; i < n; i++){
            int curr = (rightSmall[i] - leftSmall[i] + 1) * heights[i];
            if(curr > maxi) maxi = curr;
        }
        return maxi;

    }    


};
