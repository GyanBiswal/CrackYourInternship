class Solution {
public:
    void permutations(vector<int>& nums , vector<vector<int>> &result , vector<int> &current , 
    vector<bool> &used){
        if(current.size() == nums.size()){
            result.push_back(current);
            return;
        }
        for(int i = 0; i < nums.size(); i++){
            if (used[i] || (i > 0 && nums[i] == nums[i - 1] && !used[i - 1])) {
                // Skip the same element used in the previous position
                continue;
            }
            used[i] = true;
            current.push_back(nums[i]);
            permutations(nums , result , current , used);
            current.pop_back();
            used[i] = false;
        }
    }
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        vector<vector<int>>result;
        vector<int>current;
        vector<bool>used(nums.size(), false);
        sort(nums.begin() , nums.end());
        permutations(nums , result , current , used);
        return result;
    }
};
